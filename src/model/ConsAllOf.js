/**
 * Delve Client SDK
 * This is a Client SDK for Delve API
 *
 * The version of the OpenAPI document: 1.1.3
 * Contact: support@relational.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LinkedList from './LinkedList';
import SyntaxNode from './SyntaxNode';

/**
 * The ConsAllOf model module.
 * @module model/ConsAllOf
 * @version 1.1.3
 */
class ConsAllOf {
    /**
     * Constructs a new <code>ConsAllOf</code>.
     * @alias module:model/ConsAllOf
     * @param head {module:model/SyntaxNode} 
     * @param tail {module:model/LinkedList} 
     */
    constructor(head, tail) { 
        
        ConsAllOf.initialize(this, head, tail);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, head, tail) { 
        obj['head'] = head;
        obj['tail'] = tail;
    }

    /**
     * Constructs a <code>ConsAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConsAllOf} obj Optional instance to populate.
     * @return {module:model/ConsAllOf} The populated <code>ConsAllOf</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConsAllOf();

            if (data.hasOwnProperty('head')) {
                obj['head'] = SyntaxNode.constructFromObject(data['head']);
            }
            if (data.hasOwnProperty('tail')) {
                obj['tail'] = LinkedList.constructFromObject(data['tail']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/SyntaxNode} head
 */
ConsAllOf.prototype['head'] = undefined;

/**
 * @member {module:model/LinkedList} tail
 */
ConsAllOf.prototype['tail'] = undefined;






export default ConsAllOf;

