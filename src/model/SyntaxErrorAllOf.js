/**
 * Delve Client SDK
 * This is a Client SDK for Delve API
 *
 * The version of the OpenAPI document: 1.1.3
 * Contact: support@relational.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LinkedList from './LinkedList';
import SyntaxNode from './SyntaxNode';

/**
 * The SyntaxErrorAllOf model module.
 * @module model/SyntaxErrorAllOf
 * @version 1.1.3
 */
class SyntaxErrorAllOf {
    /**
     * Constructs a new <code>SyntaxErrorAllOf</code>.
     * @alias module:model/SyntaxErrorAllOf
     * @param node {module:model/SyntaxNode} 
     * @param trace {module:model/LinkedList} 
     */
    constructor(node, trace) { 
        
        SyntaxErrorAllOf.initialize(this, node, trace);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, node, trace) { 
        obj['node'] = node;
        obj['trace'] = trace;
    }

    /**
     * Constructs a <code>SyntaxErrorAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SyntaxErrorAllOf} obj Optional instance to populate.
     * @return {module:model/SyntaxErrorAllOf} The populated <code>SyntaxErrorAllOf</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SyntaxErrorAllOf();

            if (data.hasOwnProperty('next')) {
                obj['next'] = SyntaxNode.constructFromObject(data['next']);
            }
            if (data.hasOwnProperty('node')) {
                obj['node'] = SyntaxNode.constructFromObject(data['node']);
            }
            if (data.hasOwnProperty('trace')) {
                obj['trace'] = LinkedList.constructFromObject(data['trace']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/SyntaxNode} next
 */
SyntaxErrorAllOf.prototype['next'] = undefined;

/**
 * @member {module:model/SyntaxNode} node
 */
SyntaxErrorAllOf.prototype['node'] = undefined;

/**
 * @member {module:model/LinkedList} trace
 */
SyntaxErrorAllOf.prototype['trace'] = undefined;






export default SyntaxErrorAllOf;

